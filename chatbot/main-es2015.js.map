{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/chat/chat-dialog/chat-dialog.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/chat/chat-dialog/chat-dialog.component.css","/./src/app/chat/chat-dialog/chat-dialog.component.ts","/./src/app/chat/chat-mchat.service.ts","/./src/app/chat/chat.module.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<chat-dialog></chat-dialog>\"","module.exports = \"<html>\\n\\n<h2>Abhishek Bakhai's Bot</h2>\\n<link rel=\\\"stylesheet\\\" href=\\\"//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic\\\">\\n\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"//cdn.rawgit.com/necolas/normalize.css/master/normalize.css\\\">\\n\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"//cdn.rawgit.com/milligram/milligram/master/dist/milligram.min.css\\\">\\n\\n<ng-container *ngFor=\\\"let message of messages | async\\\">\\n\\n    <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.sendBy === 'bot',\\n                                        'to': message.sendBy === 'user' }\\\">\\n                                    \\n    {{message.content}}\\n                                        \\n    </div>\\n\\n\\n\\n</ng-container>\\n\\n<label for=\\\"nameField\\\">Your Message</label>\\n<input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\" style=\\\"width: 500px;font-size: 19px;font-style: bold\\\"><br>\\n<button (click)=\\\"sendMessage()\\\">Send</button>\\n</html>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chatbot';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChatModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".message { \\r\\n    font-size: 19px;\\r\\n    border-radius: 50px;\\r\\n    margin: 0 15px 10px;\\r\\n    padding: 15px 20px;\\r\\n    position: relative;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.message.to {\\r\\n    width: 450px;\\r\\n    background-color: #2095FE;\\r\\n    color: #fff;\\r\\n    margin-left: 100px;\\r\\n    text-align: right;\\r\\n    -webkit-text-size-adjust: true;\\r\\n       -moz-text-size-adjust: true;\\r\\n        -ms-text-size-adjust: true;\\r\\n            text-size-adjust: true;\\r\\n}\\r\\n.message.from {\\r\\n    width: 450px;\\r\\n    background-color: #E5E4E9;\\r\\n    color: #363636;\\r\\n    margin-right: 100px;\\r\\n    font-weight: bold;\\r\\n\\r\\n}\\r\\n.message.to + .message.to,\\r\\n.message.from + .message.from {\\r\\nmargin-top: -10px;\\r\\n}\\r\\n.nameField{\\r\\n    font-weight: bold;\\r\\n    font-size: 50sp;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9jaGF0LWRpYWxvZy9jaGF0LWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsOEJBQXNCO09BQXRCLDJCQUFzQjtRQUF0QiwwQkFBc0I7WUFBdEIsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsaUJBQWlCOztBQUVyQjtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7O0FBRW5CIiwiZmlsZSI6InNyYy9hcHAvY2hhdC9jaGF0LWRpYWxvZy9jaGF0LWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2UgeyBcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgICBtYXJnaW46IDAgMTVweCAxMHB4O1xyXG4gICAgcGFkZGluZzogMTVweCAyMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLm1lc3NhZ2UudG8ge1xyXG4gICAgd2lkdGg6IDQ1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwOTVGRTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICB0ZXh0LXNpemUtYWRqdXN0OiB0cnVlO1xyXG59XHJcbi5tZXNzYWdlLmZyb20ge1xyXG4gICAgd2lkdGg6IDQ1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U1RTRFOTtcclxuICAgIGNvbG9yOiAjMzYzNjM2O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMDBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxufVxyXG4ubWVzc2FnZS50byArIC5tZXNzYWdlLnRvLFxyXG4ubWVzc2FnZS5mcm9tICsgLm1lc3NhZ2UuZnJvbSB7XHJcbm1hcmdpbi10b3A6IC0xMHB4O1xyXG59XHJcbi5uYW1lRmllbGR7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogNTBzcDtcclxuXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ChatMchatService, Message } from '../chat-mchat.service';\nimport { Observable, Subject, throwError} from 'rxjs';\n//import 'rxjs/add/operator/scan';\nimport { scan } from 'rxjs/operators';\n//import { ChangeDetectionStrategy, Input } from '@angular/core'\n//import { map } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.css']\n})\nexport class ChatDialogComponent implements OnInit {\n\n  messages: Observable<Message[]>;\n  formValue: string;\n\n  constructor(public chat: ChatMchatService) { }\n\n  ngOnInit() {\n  this.messages = this.chat.conversation.asObservable()\n         .pipe(scan((acc, val) =>acc.concat(val)) );\n  }\n\n  sendMessage(){\n    this.chat.converse(this.formValue);\n    this.formValue = '';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n//import { ApiAiClient } from 'api-ai-javascript';\nimport { ApiAiClient } from 'api-ai-javascript/es6/ApiAiClient'\nimport { Observable, Subject, throwError} from 'rxjs';\n//import { Observable } from 'rxjs/Observable';\n//import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport {BehaviorSubject} from 'rxjs';\n\n\n\nexport class Message{\n\n  constructor(public content: string, public sendBy: string) { }\n\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatMchatService {\n\n  readonly token = environment.dialogflow.angularBot;\n  readonly client = new ApiAiClient({accessToken: this.token});\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n\n  constructor() { }\n\n  update(msg: Message){\n    this.conversation.next([msg]);\n  }\n\n  converse(msg: string){\n    const userMessage = new Message(msg, 'user');\n    this.update(userMessage);\n\n  \n    return this.client.textRequest(msg)\n                .then(res => {\n                  const speech = res.result.fulfillment.speech;\n                  const botMessage = new Message(speech, 'bot');\n                  this.update(botMessage);\n                });\n  }\n\n/*  talk(){\n    this.client.textRequest('Who are  you!')\n        .then(res => console.log(res) );\n  }*/\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\nimport { ChatMchatService } from './chat-mchat.service';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ChatDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [ChatDialogComponent],\n  providers: [ChatMchatService]\n})\nexport class ChatModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  dialogflow: {\n    angularBot:'034ba102abff4e2280a209c6e5a663c0'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}